#include <iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* left;
   Node* right;
    Node(int d){
        data=d;
        left=NULL;
        right=NULL;
    }
};
Node* buildTree(){
    int d;
    cin>>d;
    if(d==-1) return NULL;
    
    Node *temp=new Node(d);
    temp->left=buildTree();
    temp->right=buildTree();
    return temp;
}
void printpreorder(Node*root){
    if(root==NULL) return;
    cout<<root->data<<" ";
    printpreorder(root->left);
    printpreorder(root->right);
}
void printInorder(Node*root){
    if(root==NULL) return;
    
    printInorder(root->left);
    cout<<root->data<<" ";
    printInorder(root->right);
}
void printpostorder(Node*root){
    if(root==NULL) return;
    
    printpostorder(root->left);
    printpostorder(root->right);
    cout<<root->data<<" ";
}
int main() {
Node *root=buildTree();
printInorder(root);
cout<<endl;
printpreorder(root);
cout<<endl;
printpostorder(root);
	return 0;
}
//1 2 4 -1 -1 5 7 -1 -1 -1 3 -1 6 -1 -1
