#include <iostream>
using namespace std;
int firstposition(int *arr, int n,int key){
    int l=0,h=n-1,ans=-1;
       while(l<=h){
        int mid =(l+(h-l)/2);
        if(arr[mid]==key){
           ans=mid;
           h=mid-1;
        }
        else if(arr[mid]>key)
       h=mid-1;
        else
       l=mid+1; 
    }
    return ans;
}
int lastposition(int *arr, int n,int key){
    int l=0,h=n-1,ans=-1;
       while(l<=h){
        int mid =(l+(h-l)/2);
        if(arr[mid]==key){
           ans=mid;
           l=mid+1;
        }
        else if(arr[mid]>key)
       h=mid-1;
        else
       l=mid+1; 
    }
    return ans;
}
int main() {
int arr[]={1,2,3,4,4,4,5,6,8,8,9,9,9};
int n=sizeof(arr)/sizeof(arr[0]);
int key;
cin>>key;
int ans= firstposition(arr,n,key);
int lp=lastposition(arr,n,key);
if(ans!=-1)
cout<<ans<<" "<<lp;
	return 0;
}
