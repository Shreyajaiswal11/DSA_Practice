1. #include <iostream>
using namespace std;
class Node{
    public:
    int data;
    Node*next;
    Node (int d){
        data=d;
        next=NULL;
    }
};
void insertionathead(Node*&p,int val){
    if(p==NULL)
    {
        Node * p=new Node(val);
    }
    Node* temp=new Node(val);
    temp->next=p;
    p=temp; 
}
void display(Node*p){
    while(p!=0){
        cout<<p->data<<" ";
        p=p->next;
    }
}
void Reverseiterative(Node*&head){
    Node *p=head;
    int arr[4];
    int i=0;
    while(p!=0){
    arr[i]=p->data;
    p=p->next;
    i++;}
    p=head;
    i--;
    while(p!=0){
        p->data=arr[i];
        p=p->next;
        i--;
    }
}
void reverselinks(Node*&head){
   Node* p=head,*q=NULL,*r=NULL;
   while(p!=0){
       r=q;
       q=p;
       p=p->next;
       q->next=r;
   }
   head=q;
}
void Recursivereverse(){
   
   
}
int main() {
	Node* head=NULL;
	insertionathead(head,7);
	insertionathead(head,2);
	insertionathead(head,90);
	insertionathead(head,65);
	display(head);
	cout<<endl;
// 	cout<<"Reverse of LL"<<endl;
// 	Reverseiterative(head);
Recursivereverse(NULL,head,head);
	display(head);
	return 0;
}
